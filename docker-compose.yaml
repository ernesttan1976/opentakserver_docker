version: '3.8'

services:
  opentakserver:
    build: .
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./certificates:/app/certificates
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - ENABLE_ADSB=${ENABLE_ADSB}
      - ENABLE_AIS=${ENABLE_AIS}
      - ENABLE_MESHTASTIC=${ENABLE_MESHTASTIC}
      - SSL_CERT_PATH=${SSL_CERT_PATH}
      - SSL_KEY_PATH=${SSL_KEY_PATH}
      - OTS_RABBITMQ_SERVER_ADDRESS=opentakserver-rabbitmq-1
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - opentakservernetwork
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - opentakservernetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - opentakservernetwork
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  opentakservernetwork:
    driver: bridge